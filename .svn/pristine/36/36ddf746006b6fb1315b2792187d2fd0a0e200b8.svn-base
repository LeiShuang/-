package com.zfsoft.zfsoft_product.modules.home;

import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.v4.content.ContextCompat;
import android.support.v4.graphics.ColorUtils;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.GridLayoutManager;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;

import com.chad.library.adapter.base.BaseQuickAdapter;
import com.chad.library.adapter.base.entity.MultiItemEntity;
import com.gyf.barlibrary.ImmersionBar;
import com.scwang.smartrefresh.layout.api.RefreshLayout;
import com.scwang.smartrefresh.layout.constant.RefreshState;
import com.scwang.smartrefresh.layout.listener.OnRefreshListener;
import com.youth.banner.Banner;
import com.zfsoft.zfsoft_product.R;
import com.zfsoft.zfsoft_product.base.BaseFragment;
import com.zfsoft.zfsoft_product.di.ActivityScoped;
import com.zfsoft.zfsoft_product.utils.GlideImageLoader;
import com.zfsoft.zfsoft_product.utils.SizeUtils;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

import butterknife.BindView;

/**
 * 创建日期：2018/12/24 on 10:54
 * 描述:
 * 作者:Ls
 */
@ActivityScoped
public class HomeFragment extends BaseFragment {
    @BindView(R.id.rv_home)
    RecyclerView mRvHome;
//    @BindView(R.id.et_home_search)
//    EditText mEtHomeSearch;
//    @BindView(R.id.toolbar)
//    Toolbar mToolbar;
    @BindView(R.id.frame_home)
    FrameLayout mFrameHome;
    @BindView(R.id.refresh_home)
    RefreshLayout mRefreshHome;

    private int bannerHeight;
    private List<MultipleItem> mItemList = new ArrayList<>();
    private List<String> mImages = new ArrayList<>();
    private LinearLayoutManager mLayoutManager;
    private HomeAdapter mAdapter;

    @Override
    protected int getLayoutResID() {
        return R.layout.fragment_home;
    }

    @Override
    protected void initVariables() {

    }

    @Inject
    public HomeFragment() {

    }

    @Override
    protected void handleBundle(Bundle bundle) {

    }

    @Override
    protected void operateViews(View view) {
        //初始化ImmersionBar让ToolBar和状态栏不重叠
//        ImmersionBar.setTitleBar(getActivity(), mToolbar);
        //初始化数据
        initData();
        GridLayoutManager manager = new GridLayoutManager(getContext(), 6);
//        mLayoutManager = new LinearLayoutManager(getActivity(),LinearLayoutManager.VERTICAL,false);
        mRvHome.setLayoutManager(manager);
        mAdapter = new HomeAdapter(getContext(),mItemList);
        mAdapter.setSpanSizeLookup(new BaseQuickAdapter.SpanSizeLookup() {
            @Override
            public int getSpanSize(GridLayoutManager gridLayoutManager, int position) {
                int type = mItemList.get(position).getItemType();
                if(type == MultipleItem.TEXT){
                    return MultipleItem.TEXT_SPAN_SIZE;
                }else if(type == MultipleItem.IMG_SIX){
                    return MultipleItem.IMG_SIX_SPAN_SIZE;
                }else if(type == MultipleItem.IMG_SCROLL){
                    return MultipleItem.IMG_SCROLL_SPAN_SIZE;
                }else {
                    return MultipleItem.IMG_SINGLE_SPAN_SIZE;
                }
            }
        });
        mAdapter.openLoadAnimation(BaseQuickAdapter.SCALEIN);
        mRvHome.addItemDecoration(new ItemSpaceDecoration(SizeUtils.dp2px(8,getContext())));
        mRvHome.setAdapter(mAdapter);
        addHeaderView();
//        addTwoPhoto();
//        mAdapter.setNewData(mItemList);
    }
    //顶部轮播图下方的两张广告位
    private void addTwoPhoto() {
        View twoPic = LayoutInflater.from(getContext()).inflate(R.layout.home_header_two_pic,(ViewGroup) mRvHome.getParent(),false);
        mAdapter.addHeaderView(twoPic,-1);
    }

    private void newData() {
//        for (int i = 0; i < 20; i++) {
//            mItemList.add("item" + i);
//        }
    }

    //给RecyclerView添加头布局
    private void addHeaderView() {
        View mHeaderView = LayoutInflater.from(getActivity()).inflate(R.layout.home_header_banner,(ViewGroup) mRvHome.getParent(),false);
        Banner banner = mHeaderView.findViewById(R.id.home_banner);
        banner.setImages(mImages)
                .setImageLoader(new GlideImageLoader())
                .setDelayTime(5000)
                .start();

        mAdapter.addHeaderView(mHeaderView,-2);
        ViewGroup.LayoutParams bannerParams = banner.getLayoutParams();
//        ViewGroup.LayoutParams toolBarParams = mToolbar.getLayoutParams();
//        bannerHeight = bannerParams.height - toolBarParams.height - ImmersionBar.getStatusBarHeight(getActivity());
        bannerHeight = bannerParams.height  - ImmersionBar.getStatusBarHeight(getActivity());
    }

    private void initData() {

        MultipleItem.TitleEntity titleEntity = new MultipleItem.TitleEntity();
        titleEntity.setTitle("试用新品");
        MultipleItem multipleItem = new MultipleItem(MultipleItem.TEXT,MultipleItem.TEXT_SPAN_SIZE,titleEntity);
        mItemList.add(multipleItem);

        for (int i = 0; i < 6; i++) {
            MultipleItem.SixImgEntity sixImgEntity = new MultipleItem.SixImgEntity();
            sixImgEntity.setImgUrl("http://dpic.tiankong.com/a6/rz/QJ8813728866.jpg");
            sixImgEntity.setPrice("100");
            MultipleItem multipleItemSix = new MultipleItem(MultipleItem.IMG_SIX,MultipleItem.IMG_SIX_SPAN_SIZE,sixImgEntity);
            mItemList.add(multipleItemSix);
        }

        MultipleItem.TitleEntity titleEntityTwo = new MultipleItem.TitleEntity();
        titleEntityTwo.setTitle("试用达人");
        MultipleItem multipleItemTwo = new MultipleItem(MultipleItem.TEXT,MultipleItem.TEXT_SPAN_SIZE,titleEntityTwo);
        mItemList.add(multipleItemTwo);

        MultipleItem.ScrollImgListEntity scrollImgListEntity = new MultipleItem.ScrollImgListEntity();
        List<MultipleItem.ScrollImgListEntity.ScrollImgEntity> scrollImgEntities = new ArrayList<>();
        for (int i = 0; i < 6; i++) {
            MultipleItem.ScrollImgListEntity.ScrollImgEntity scrollImgEntity = new MultipleItem.ScrollImgListEntity.ScrollImgEntity();
            scrollImgEntity.setFansNum("256");
            scrollImgEntity.setHeadUrl("http://dpic.tiankong.com/a6/rz/QJ8813728866.jpg");
            scrollImgEntity.setName("嘻嘻");
            scrollImgEntity.setReportNum("120");
            scrollImgEntities.add(scrollImgEntity);
        }
        scrollImgListEntity.setList(scrollImgEntities);
        MultipleItem multipleItemScroll = new MultipleItem(MultipleItem.IMG_SCROLL,MultipleItem.IMG_SCROLL_SPAN_SIZE,scrollImgListEntity);
        mItemList.add(multipleItemScroll);

        MultipleItem.TitleEntity titleEntityThree = new MultipleItem.TitleEntity();
        titleEntityThree.setTitle("试用报告");
        MultipleItem multipleItemThree = new MultipleItem(MultipleItem.TEXT,MultipleItem.TEXT_SPAN_SIZE,titleEntityThree);
        mItemList.add(multipleItemThree);


        for (int i = 0; i < 10; i++) {

            MultipleItem.SingleImgEntity singleImgEntity = new MultipleItem.SingleImgEntity();
            singleImgEntity.setHeadUrl("http://dpic.tiankong.com/a6/rz/QJ8813728866.jpg");
            singleImgEntity.setUserUrl("http://dpic.tiankong.com/a6/rz/QJ8813728866.jpg");
            singleImgEntity.setContent("春江水暖，岁月静好");
            singleImgEntity.setName("哈哈");
            singleImgEntity.setThumbUpNum("1024");
            MultipleItem multipleItemSingle = new MultipleItem(MultipleItem.IMG_SINGLE,MultipleItem.IMG_SINGLE_SPAN_SIZE,singleImgEntity);
            mItemList.add(multipleItemSingle);
        }










        mImages.add("http://desk.zol.com.cn/showpic/1024x768_63850_14.html");
        mImages.add("http://dpic.tiankong.com/a6/rz/QJ8813728866.jpg");
        mImages.add("http://dpic.tiankong.com/wt/ap/QJ9105410812.jpg");
        mImages.add("http://dpic.tiankong.com/fx/g1/QJ6846644164.jpg");
    }

    @Override
    protected void initListener() {
//       mRvHome.addOnScrollListener(new RecyclerView.OnScrollListener() {
//           private int totalDy = 0;
//           @Override
//           public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
//               super.onScrolled(recyclerView, dx, dy);
//               totalDy += dy;
//               float alpha = totalDy / bannerHeight;
//               if (totalDy <= bannerHeight){
//                   //如果小于 滑动截止高度（Banner的高度 - ToolBar的高度 - 状态栏高度）
//                   mToolbar.setBackgroundColor(ColorUtils.blendARGB(Color.TRANSPARENT, ContextCompat.getColor(getContext(),R.color.colorPrimary),alpha));
//               }else {
//                   mToolbar.setBackgroundColor(ColorUtils.blendARGB(Color.TRANSPARENT,ContextCompat.getColor(getContext(),R.color.colorPrimary),1));
//               }
//           }
//       });

        mRefreshHome.setOnRefreshListener(new OnRefreshListener(){

            @Override
            public void onRefresh(@NonNull RefreshLayout refreshLayout) {

                RefreshState state = refreshLayout.getState();
//                if (state == RefreshState.PullDownToRefresh){
//                    mToolbar.setVisibility(View.GONE);
//                }
                refreshLayout.finishRefresh(2000);
                mItemList.clear();
                newData();
                mAdapter.setNewData(mItemList);
//                mToolbar.setVisibility(View.VISIBLE);
            }

        });

        mRefreshHome.setOnLoadMoreListener(null);
    }

    @Override
    public void initPresenter() {

    }

}
