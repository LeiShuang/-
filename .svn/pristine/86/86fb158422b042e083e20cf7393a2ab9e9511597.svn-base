package com.zfsoft.zfsoft_product.modules.try_use.try_use_detail;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.os.Bundle;
import android.support.v4.widget.NestedScrollView;
import android.text.TextUtils;
import android.view.View;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.shuyu.gsyvideoplayer.GSYVideoManager;
import com.shuyu.gsyvideoplayer.utils.OrientationUtils;
import com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer;
import com.vondear.rxtool.view.RxToast;
import com.youth.banner.Banner;
import com.youth.banner.BannerConfig;
import com.zfsoft.zfsoft_product.R;
import com.zfsoft.zfsoft_product.base.BaseFragment;
import com.zfsoft.zfsoft_product.common.Config;
import com.zfsoft.zfsoft_product.di.ActivityScoped;
import com.zfsoft.zfsoft_product.entity.ProductInfo;
import com.zfsoft.zfsoft_product.entity.SignBean;
import com.zfsoft.zfsoft_product.entity.ThingsInfoEntity;
import com.zfsoft.zfsoft_product.utils.DbHelper;
import com.zfsoft.zfsoft_product.utils.GlideImageLoader;
import com.zfsoft.zfsoft_product.utils.ShareUtils;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

import butterknife.BindView;
import butterknife.ButterKnife;
import butterknife.Unbinder;
import cn.iwgang.countdownview.CountdownView;

/**
 * 创建日期：2019/1/12 on 14:23
 * 描述:产品详情fragment
 * 作者:Ls
 */
@ActivityScoped
public class ProductDetailFragment extends BaseFragment implements View.OnClickListener, TryUseDetailContract.UseDetailView {
    @BindView(R.id.report_detail_banner)
    Banner mReportDetailBanner;
    @BindView(R.id.tv_use_title)
    TextView mTvUseTitle;
    @BindView(R.id.tv_thing_size)
    TextView mTvThingSize;
    @BindView(R.id.tv_thing_price)
    TextView mTvThingPrice;
    @BindView(R.id.tv_number)
    TextView mTvNumber;
    @BindView(R.id.tv_person_number)
    TextView mTvPersonNumber;

    @BindView(R.id.tv_try_use_detail_share)
    TextView mTvTryUseDetailShare;
    @BindView(R.id.tv_try_sue_detail_get)
    TextView mTvTrySueDetailGet;
    @BindView(R.id.iv_product_like)
    ImageView mIvProductLike;
    @BindView(R.id.tv_simple_title)
    TextView mTvSimpleTitle;
    @BindView(R.id.rl_share_gift)
    RelativeLayout mRlShareGift;
    @BindView(R.id.view_divider)
    View mViewDivider;
    @BindView(R.id.scroll)
    NestedScrollView mScroll;
    @BindView(R.id.count_down_time)
    CountdownView mCountDownTime;
    @BindView(R.id.super_player)
    StandardGSYVideoPlayer mSuperPlayer;



    private ProductInfo mInfo;
    private String mThingsId;
    private OrientationUtils mOrientationUtils;

    @Inject
    public ProductDetailFragment() {

    }

    @Inject
    TryUseDetailPresenter mPresenter;

    public static ProductDetailFragment newInstance(String index) {
        Bundle args = new Bundle();
        args.putString("thingsId", index);
        ProductDetailFragment fragment = new ProductDetailFragment();
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    protected int getLayoutResID() {
        return R.layout.fragment_producet_detail;
    }

    @Override
    protected void initVariables() {

    }

    @Override
    protected void handleBundle(Bundle bundle) {
        mThingsId = bundle.getString("thingsId");
    }

    @Override
    protected void operateViews(View view) {
        mPresenter.getProductsDetails(Config.HSK, mThingsId);
    }

    @Override
    public void onStart() {
        super.onStart();
        mReportDetailBanner.startAutoPlay();
    }

    @Override
    public void onStop() {
        super.onStop();
        mReportDetailBanner.stopAutoPlay();
    }


    @Override
    protected void initListener() {
        mRlShareGift.setOnClickListener(this);
        mTvTrySueDetailGet.setOnClickListener(this);
        mIvProductLike.setOnClickListener(this);
    }

    @Override
    public void initPresenter() {
        mPresenter.takeView(this);
    }

    @Override
    public void onClick(View v) {
        int key = v.getId();
        if (key == R.id.rl_share_gift) {
            //分享得积分
            ShareUtils.setShareInfo(mContext);
        } else if (key == R.id.tv_try_sue_detail_get) {
            //立即申请
            AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
            builder.setTitle("是否申请此商品?")
                    .setPositiveButton("立即申请", new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                           mPresenter.tryUseProDuct(Config.HSK,mThingsId,DbHelper.getUserId(mContext));
                        }
                    }).setNegativeButton("取消申请", new DialogInterface.OnClickListener() {
                @Override
                public void onClick(DialogInterface dialog, int which) {
                    RxToast.showToast(getString(R.string.cancel_get));
                }
            });
            builder.show();
        } else if (key == R.id.iv_product_like) {
            mPresenter.collectProduct(Config.HSK,mThingsId, DbHelper.getUserId(getContext()));
        }
    }


    @Override
    public void getInfoSuccess(ThingsInfoEntity info) {
        if (info != null) {
            List<String> images = new ArrayList<>();
            for (int i = 0; i < info.getCommodityurls().size(); i++) {
                images.add(info.getCommodityurls().get(i).getCommodityurl());
            }

            mReportDetailBanner.setImages(images)
                    .setImageLoader(new GlideImageLoader())
                    .setBannerStyle(BannerConfig.NUM_INDICATOR)
                    .setDelayTime(5000)
                    .start();

            mTvUseTitle.setText(info.getCommoditytitle());
            mTvThingSize.setText(info.getCommodityparameters());
            mTvThingPrice.setText("售价: " + info.getCommodityprice() + "元");
            int second = info.getCommoditytime();
            if (!TextUtils.isEmpty(String.valueOf(second))) {
                mCountDownTime.start(Long.valueOf(String.valueOf(second) + "000"));
            }
            mTvNumber.setText(String.valueOf(info.getCommoditysum()));
            mTvPersonNumber.setText("共" + String.valueOf(info.getCommodityapplicationsum()) + "人申请");
            String mp4Url = "http://200024424.vod.myqcloud.com/200024424_709ae516bdf811e6ad39991f76a4df69.f20.mp4";
            mSuperPlayer.setUp(mp4Url,true,"默认视频");
            mOrientationUtils = new OrientationUtils(getActivity(), mSuperPlayer);
            //设置全屏按键功能,这是使用的是选择屏幕，而不是全屏
            mSuperPlayer.getFullscreenButton().setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    mOrientationUtils.resolveByClick();
                }
            });
            mSuperPlayer.startPlayLogic();
        }
    }

    @Override
    public void getInfoFailed(String errorMsg) {
        RxToast.showToast(errorMsg);
    }

    @Override
    public void collectSuccess(SignBean info) {
        String collectType = info.getMsgtype();
        if ("1".equals(collectType)){
            RxToast.showToast("收藏成功!");
            mIvProductLike.setImageResource(R.mipmap.ico_report_detail_liked);
        }else if ("2".equals(collectType)){
            RxToast.showToast("收藏失败!");
        }
    }

    @Override
    public void collectFailed(String errorMsg) {
        RxToast.showToast("收藏失败!");
    }

    @Override
    public void TryUseSuccess(SignBean info) {
        String tryuseType = info.getMsgtype();
        if ("1".equals(tryuseType)){
            RxToast.showToast("提交申请成功");
        }else if ("2".equals(tryuseType)){
            RxToast.showToast("提交申请失败");
        }else if ("3".equals(tryuseType)){
            RxToast.showToast("请勿重复申请!");
        }
    }

    @Override
    public void TryUseFailed(String errorMsg) {
        RxToast.showToast(errorMsg);
    }

    @Override
    public void onResume() {
        super.onResume();
        mSuperPlayer.onVideoResume();
    }

    @Override
    public void onPause() {
        super.onPause();
        mSuperPlayer.onVideoPause();
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        mPresenter.dropView();
        GSYVideoManager.releaseAllVideos();
        if ( mOrientationUtils!= null)
            mOrientationUtils.releaseListener();
    }

}
