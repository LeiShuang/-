package com.zfsoft.zfsoft_product.modules.login.validation;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;

import com.vondear.rxtool.view.RxToast;
import com.zfsoft.zfsoft_product.R;
import com.zfsoft.zfsoft_product.base.BaseFragment;
import com.zfsoft.zfsoft_product.base.HomeActivity;
import com.zfsoft.zfsoft_product.common.Config;
import com.zfsoft.zfsoft_product.entity.IsLogin;
import com.zfsoft.zfsoft_product.entity.LoginBean;
import com.zfsoft.zfsoft_product.entity.SignBean;
import com.zfsoft.zfsoft_product.entity.User;
import com.zfsoft.zfsoft_product.modules.login.CountDownTextView;
import com.zfsoft.zfsoft_product.modules.login.info.SetInfoActivity;
import com.zfsoft.zfsoft_product.utils.DbHelper;


import java.util.concurrent.TimeUnit;

import javax.inject.Inject;

import butterknife.BindView;
import cn.smssdk.EventHandler;
import cn.smssdk.SMSSDK;

/**
 * Created by ckw
 * on 2019/1/14.
 */
public class ValidationFragment extends BaseFragment implements ValidationContract.View {


    @Inject
    public ValidationFragment() {
    }

    @Inject
    ValidationPresenter mValidationPresenter;

    @BindView(R.id.tv_send_validation)
    TextView mTvSendValidationTip;//验证码发送提示信息
    @BindView(R.id.et_validation)
    EditText mEtValidation;//输入验证码框
//    @BindView(R.id.et_validation_pwd)
//    EditText mEtValidationPwd;//输入密码框
//    @BindView(R.id.et_validation_pwd_again)
//    EditText mEtValidationPwdAgain;//再次输入密码框
    @BindView(R.id.count_down_view)
    CountDownTextView mCountDownTextView;//倒计时控件
    @BindView(R.id.btn_login)
    Button mBtnLogin;



    private String mValidationCode = "735481";


    private String mPhoneNum;


    @Override
    protected int getLayoutResID() {
        return R.layout.fragment_validation;
    }

    @Override
    protected void initVariables() {

    }

    @Override
    protected void handleBundle(Bundle bundle) {
        mPhoneNum = bundle.getString("phone");
    }

    @Override
    protected void operateViews(View view) {

        // 注册一个事件回调，用于处理SMSSDK接口请求的结果
//        SMSSDK.registerEventHandler(eventHandler);

        count();

    }

    @Override
    protected void initListener() {
        mBtnLogin.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                mValidationPresenter.loginByValidate(Config.HSK,mPhoneNum,mValidationCode);

//                mValidationCode = mEtValidation.getText().toString().trim();
//                if(mValidationCode.equals("")){
//                    RxToast.showToast("请输入验证码");
//                }else {
//                    //提交验证码
//                    SMSSDK.submitVerificationCode("86",mPhoneNum,mValidationCode);
//                }


            }
        });

    }

    @Override
    public void initPresenter() {
        mValidationPresenter.takeView(this);
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
//        SMSSDK.unregisterEventHandler(eventHandler);
        mValidationPresenter.dropView();
    }

    //记住用户登录的状态
    private void setUserIsLogin() {
        IsLogin isLogin = new IsLogin();
        isLogin.setLogin(true);
        DbHelper.saveValueBySharedPreferences(mContext, Config.DB.IS_LOGIN_NAME, Config.DB.IS_LOGIN_KEY, isLogin);
    }

    /*
     * 验证两次输入的密码是否一致
     * */
//    private boolean validTwicePassword(){
//        String firstPwd = mEtValidationPwd.getText().toString().trim();
//        String secondPwd = mEtValidationPwdAgain.getText().toString().trim();
//        if(firstPwd.equals(secondPwd)){
//            return true;
//        }
//
//        return false;
//    }

//    EventHandler eventHandler=new EventHandler(){
//
//        @Override
//        public void afterEvent(int event, int result, Object data) {
//
//            if (event == SMSSDK.EVENT_GET_VERIFICATION_CODE) {
//                if (result == SMSSDK.RESULT_COMPLETE) {
//                    // 请注意，此时只是完成了发送验证码的请求，验证码短信还需要几秒钟之后才送达
//                    mTvSendValidationTip.setVisibility(View.VISIBLE);
//                } else {
//                    RxToast.showToast("验证码发送失败");
//                    mTvSendValidationTip.setVisibility(View.INVISIBLE);
//                }
//            } else if (event == SMSSDK.EVENT_SUBMIT_VERIFICATION_CODE) {
//                if (result == SMSSDK.RESULT_COMPLETE) {
//                    //验证成功
//                    RxToast.showToast("验证成功");
//                    Intent intent = new Intent(getActivity(), HomeActivity.class);
//                    startActivity(intent);
//                } else {
//                    RxToast.showToast("验证失败");
//                }
//            }
//
//        }
//    };

    /**
     * 验证码代码
     * */
    private void count() {
        mCountDownTextView
                .setNormalText("获取验证码")
                .setCountDownText("重新获取(", "s)")
                .setCloseKeepCountDown(false)//关闭页面保持倒计时开关
                .setCountDownClickable(false)//倒计时期间点击事件是否生效开关
                .setShowFormatTime(false)//是否格式化时间
                .setIntervalUnit(TimeUnit.SECONDS)
                .setOnCountDownStartListener(new CountDownTextView.OnCountDownStartListener() {
                    @Override
                    public void onStart() {
//                        Toast.makeText(getContext(), "开始计时", Toast.LENGTH_SHORT).show();
                    }
                })
                .setOnCountDownTickListener(new CountDownTextView.OnCountDownTickListener() {
                    @Override
                    public void onTick(long untilFinished) {
                        //剩余的时间
                    }
                })
                .setOnCountDownFinishListener(new CountDownTextView.OnCountDownFinishListener() {
                    @Override
                    public void onFinish() {
                        mTvSendValidationTip.setVisibility(View.INVISIBLE);
                        mEtValidation.setText("735481");
//                        Toast.makeText(getContext(), "倒计时完毕", Toast.LENGTH_SHORT).show();
                    }
                })
                .setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
//                        SMSSDK.getVerificationCode("86", mPhoneNum);

                        mCountDownTextView.startCountDown(3);
                    }
                });
    }


    @Override
    public void loginByValidateSuccess(LoginBean loginBean) {
        String msgtype = loginBean.getMsgtype();
        if(msgtype.equals("1")){
            User user = new User();
            user.setUserid(loginBean.getUserid());
            user.setPhone(mPhoneNum);
            DbHelper.saveValueBySharedPreferences(mContext, Config.DB.USER_NAME, Config.DB.USER_KEY, user);
            setUserIsLogin();
            RxToast.showToast("登录成功");
            Intent intent = new Intent(getActivity(), HomeActivity.class);
            startActivity(intent);
        }else {
            RxToast.showToast("登录失败");
        }

    }

    @Override
    public void loginByValidateFailure(String errorMsg) {
        RxToast.showToast(errorMsg);
    }

}
