package com.zfsoft.zfsoft_product.net;

import com.zfsoft.zfsoft_product.entity.AddressBean;
import com.zfsoft.zfsoft_product.entity.BannerBean;
import com.zfsoft.zfsoft_product.entity.CollectionBean;
import com.zfsoft.zfsoft_product.entity.CommentsBean;
import com.zfsoft.zfsoft_product.entity.ConcernBean;
import com.zfsoft.zfsoft_product.entity.DiscussDetailFirstEntity;
import com.zfsoft.zfsoft_product.entity.IntegralBean;
import com.zfsoft.zfsoft_product.entity.IntegralDetailBean;
import com.zfsoft.zfsoft_product.entity.LoginBean;
import com.zfsoft.zfsoft_product.entity.MyTrySingleBean;
import com.zfsoft.zfsoft_product.entity.OtherBean;
import com.zfsoft.zfsoft_product.entity.PlatformBean;
import com.zfsoft.zfsoft_product.entity.ProductTypeEntity;
import com.zfsoft.zfsoft_product.entity.RedBookBean;
import com.zfsoft.zfsoft_product.entity.ReportInfo;
import com.zfsoft.zfsoft_product.entity.ResponseListInfo;
import com.zfsoft.zfsoft_product.entity.SignBean;
import com.zfsoft.zfsoft_product.entity.TestPersonBean;
import com.zfsoft.zfsoft_product.entity.TestReportBean;
import com.zfsoft.zfsoft_product.entity.TestreportreplyListBean;
import com.zfsoft.zfsoft_product.entity.ThingsInfoEntity;
import com.zfsoft.zfsoft_product.entity.ThirdBindBean;
import com.zfsoft.zfsoft_product.entity.TryNewProductBean;
import com.zfsoft.zfsoft_product.entity.User;
import com.zfsoft.zfsoft_product.entity.UserBean;

import java.util.List;
import java.util.Map;

import io.reactivex.Observable;
import okhttp3.MultipartBody;
import okhttp3.RequestBody;
import retrofit2.http.Field;
import retrofit2.http.FieldMap;
import retrofit2.http.FormUrlEncoded;
import retrofit2.http.GET;
import retrofit2.http.Multipart;
import retrofit2.http.POST;
import retrofit2.http.Part;
import retrofit2.http.PartMap;
import retrofit2.http.Query;
import retrofit2.http.Url;

/**
 * 创建日期：2018/12/24 on 10:15
 * 描述:接口类
 * 作者:Ls
 */
public interface ApiService {

    /*
     * 登录
     * */
    ///////////////////////////////////////////////////////////////////////////////////////////////

    /*
     * 验证码登录
     * */
    @GET("system/connect/getphone")
    Observable<Response<LoginBean>> loginByValidation(@Query("hsk") String hsk,
                                                      @Query("telnumber") String phone,
                                                      @Query("code") String validateCode);
    /*
    * 验证手机号是否注册
    * */
    @GET("system/connect/authMobile")
    Observable<Response<SignBean>> confirmRegisterPhone(@Query("hsk")String hsk,
                                                        @Query("mobile") String mobile);

    /*
    * 注册
    * */
    @FormUrlEncoded
    @POST("system/connect/registerUser")
    Observable<Response<LoginBean>> register(@Field("hsk") String hsk,
                                             @Field("telnumber") String phone,
                                             @Field("code")String code,
                                             @Field("password") String password);

    /*
    * 用户第三方绑定接口
    * */
    @FormUrlEncoded
    @POST("system/connect/saveUserDsfxx")
    Observable<Response<LoginBean>> thirdLogin(@Field("hsk")String hsk,
                                               @Field("openId")String openId,
                                               @Field("userName")String userName,
                                               @Field("openType") String type,
                                               @Field("requestType") String requestType,
                                               @Field("code")String code,
                                               @Field("telnumber")String phoneNumber,
                                               @Field("msgcode") String phoneCode,
                                               @Field("avatar")String avatar);

    /*
     * 手机密码登录
     * */
    @FormUrlEncoded
    @POST("system/connect/getLogin")
    Observable<Response<LoginBean>> loginByPassword(@Field("hsk") String hsk,
                                                    @Field("username") String phone,
                                                    @Field("password") String validateCode);

    /*
     * 获取短信验证码(新)
     * */
    @GET("system/connect/smsSend")
    Observable<Response<SignBean>> getSmsCode(@Query("hsk") String hsk,
                                              @Query("phone") String phone,
                                              @Query("userid") String userId,
                                              @Query("type") String type);

    /*
     * 验证 短信验证码
     * */
    @GET("system/connect/smsAuth")
    Observable<Response<SignBean>> confirmSmsCode(@Query("hsk") String hsk,
                                                  @Query("phone") String phone,
                                                  @Query("userid") String userId,
                                                  @Query("type") String type,
                                                  @Query("code") String code);

    /*
     * 首页
     * */
    ///////////////////////////////////////////////////////////////////////////////////////////////
    /*
     * 轮播图数据
     * */
    @GET("system/connect/getCarousel")
    Observable<Response<List<BannerBean>>> getBannerList(@Query("hsk") String hsk);

    /*
     * 首页试用新品 6条数据 system/connect/cp/xplist
     * */
    @GET("system/connect/getNewProducts")
    Observable<Response<List<TryNewProductBean>>> getTryNewProductList(@Query("hsk") String hsk, @Query("userid") String userId);

    /*
     * 试用达人
     * */
    @GET("system/connect/getTalent")
    Observable<Response<List<TestPersonBean>>> getTestPersonList(@Query("hsk") String hsk, @Query("userid") String userId);

    /*
     * 首页 试用报告list
     * */
    @GET("system/connect/getTestReport")
    Observable<Response<List<TestReportBean>>> getTestReportList(@Query("hsk") String hsk);

    /*
     * 我的
     * */
    ///////////////////////////////////////////////////////////////////////////////////////////////



    /*
     * 修改密码（先验证手机号）
     * */
    @FormUrlEncoded
    @POST("system/connect/changePassword")
    Observable<Response<SignBean>> forChangePassword(@Field("hsk") String hak,
                                                     @Field("userid") String userId,
                                                     @Field("telnumber") String phone,
                                                     @Field("code") String code);

    /*
     * 修改手机号(真正地修改手机号)
     * */
    @FormUrlEncoded
    @POST("system/connect/changePhoneNum")
    Observable<Response<SignBean>> forChangePhone(@Field("hsk") String hak,
                                                  @Field("userid") String userId,
                                                  @Field("telnumber") String phone,
                                                  @Field("code") String code);

    /*
     * 修改密码（验证手机号之后）
     * */
    @FormUrlEncoded
    @POST("system/connect/setPassword")
    Observable<Response<SignBean>> setPassword(@Field("hsk") String hak,
                                               @Field("userid") String userId,
                                               @Field("password") String password);

    /*
     * 修改手机号（验证手机号之后）
     * */
    @FormUrlEncoded
    @POST("system/connect/setPhoneNum")
    Observable<Response<SignBean>> setPhoneNum(@Field("hsk") String hak,
                                               @Field("userid") String userId,
                                               @Field("telnumber") String phone,
                                               @Field("code") String code);


    /*
    * 上传我的第三方账户信息
    * */
    @FormUrlEncoded
    @POST("system/connect/saveShareaAccount")
    Observable<Response<SignBean>> saveThirdPlatform(@Field("hsk")String hsk,
                                                     @Field("userid")String userId,
                                                     @Field("qqid") String qqid,
                                                     @Field("wchatid")String wechatid,
                                                     @Field("sinaid") String sinaid,
                                                     @Field("xhs") String xhs);

    /*
    * 获取第三方平台账户信息
    * */
    @GET("system/connect/getShareaAccount")
    Observable<Response<PlatformBean>> getThirdPlatform(@Query("hsk")String hsk,
                                                        @Query("userid") String userId);

    /*
    * 第三方认证登录接口
    * openId:第三方账号唯一标示
        userName:第三方昵称
        type：平台类型（微信：1、微博：2、QQ：3）
    * */
    @FormUrlEncoded
    @POST("system/connect/saveExternalInterface")
    Observable<Response<LoginBean>> confirmThirdLogin(@Field("hsk")String hsk,
                                                     @Field("requestType") String requestType,
                                                     @Field("code")String code,
                                                     @Field("openId")String openId,
                                                     @Field("userName")String userName,
                                                     @Field("expiredTime")String expiredTime,
                                                     @Field("openType") String type,
                                                     @Field("avatar")String avatar);

    /*
    * 社交平台账号获取小红书信息
    * */
    @GET("system/connect/getMyXhsInfo")
    Observable<Response<RedBookBean>> getMyXhsInfo(@Query("hsk") String hsk,@Query("userId") String userId);

    /*
    * 保存小红书信息
    * */
    @FormUrlEncoded
    @POST("system/connect/saveMyXhsInfo")
    Observable<Response<SignBean>> saveMyXhsInfo(@Field("hsk")String hsk,@Field("userId") String userId,
                                                 @Field("redName") String redName,@Field("redAccount") String redAccount,
                                                 @Field("redHome") String redHome,@Field("redFans") String redFans);


    @GET("system/connect/getOtherAccountStatus")
    Observable<Response<List<ThirdBindBean>>> getThirdBindState(@Query("hsk")String hsk,@Query("userId")String userId);

    @FormUrlEncoded
    @POST("system/connect/deleteOtherAccountStatus")
    Observable<Response<SignBean>> unbindThirdPlatform(@Field("hsk")String hsk,@Field("openId")String openId,@Field("userId")String userId);

    @FormUrlEncoded
    @POST("system/connect/saveOtherAccountStatus")
    Observable<Response<SignBean>> bindThirdPlatform(@Field("hsk")String hsk,@Field("userId")String userId,@Field("requestType")String requestType,
                                                     @Field("code")String code,@Field("openId") String openId,@Field("userName")String userName,
                                                     @Field("openType")String openType,@Field("avatar") String avatar);

    /*
     * 获取个人信息
     * */
    @GET("system/connect/getSocialInfo")
    Observable<Response<UserBean>> getPersonalInfo(@Query("hsk") String hsk, @Query("userid") String userId);

    /*
     * 其他人的信息
     * */
    @GET("system/connect/getHomePage")
    Observable<Response<OtherBean>> getOtherInfo(@Query("hsk") String hsk, @Query("userid") String userId, @Query("talented") String targetId);


    /*
     * 上传个人信息
     * */
    @Multipart
    @POST("system/connect/getMyInfo")
    Observable<Response<SignBean>> uploadPersonalInfo(@PartMap Map<String, RequestBody> map,
                                                      @Part List<MultipartBody.Part> images);

    /*
     * 获取个人信息（设置中的信息填写界面）
     * */
    @GET("system/connect/getMyInfoRequest")
    Observable<Response<User>> getUserInfo(@Query("hsk") String hsk, @Query("userid") String userId);

    /*
     * 签到
     * */
    @GET("system/connect/getCheckIn")
    Observable<Response<SignBean>> getSignResult(@Query("hsk") String hsk, @Query("userid") String userId);

    /*
     * 设置界面 进入 我的试用界面
     * */
    @GET("system/connect/getTrialInfo")
    Observable<Response<ResponseListInfo<MyTrySingleBean>>> getMyTryProductList(@Query("hsk") String hsk,
                                                                                @Query("userid") String userId,
                                                                                @Query("commoditytype") String commoditytype,
                                                                                @Query("page") int page,
                                                                                @Query("size") int size);

    /*
     * 设置界面 进入 我的报告界面
     * */
    @GET("system/connect/getMyReport")
    Observable<Response<ResponseListInfo<TestReportBean>>> getMyReportList(@Query("hsk") String hsk,
                                                                           @Query("userid") String userId,
                                                                           @Query("page") int page,
                                                                           @Query("size") int size
    );

    /*
     * 我的收藏
     * */
    @GET("system/connect/getMyCollection")
    Observable<Response<ResponseListInfo<CollectionBean>>> getMyCollectionList(@Query("hsk") String hsk,
                                                                               @Query("userid") String userId,
                                                                               @Query("commoditytype") String commoditytype,
                                                                               @Query("page") int page,
                                                                               @Query("size") int size);

    /*
     * 我的关注
     * */
    @GET("system/connect/getMyAttention")
    Observable<Response<ResponseListInfo<ConcernBean>>> getMyConcernList(@Query("hsk") String hsk,
                                                                         @Query("userid") String userId,
                                                                         @Query("page") int page,
                                                                         @Query("size") int size);

    /*
     * 我的粉丝
     * */
    @GET("system/connect/getMyFans")
    Observable<Response<ResponseListInfo<ConcernBean>>> getMyFansList(@Query("hsk") String hsk,
                                                                         @Query("userid")String userId,
                                                                         @Query("page") int page,
                                                                         @Query("size") int size);
    /*
    *
    * 新增收货地址
    * */
    @FormUrlEncoded
    @POST("system/connect/saveMyAddress")
    Observable<Response<SignBean>> addAddress(@FieldMap Map<String,String> params);

    /*
     * 获取收货地址列表
     * */
    @GET("system/connect/getMyAddress")
    Observable<Response<List<AddressBean>>> getAddressList(@Query("hsk") String hsk, @Query("userid") String userId);

    /*
    * 积分商城
    * */
    @GET("baidu")
    Observable<Response<ResponseListInfo<IntegralBean>>> getIntegralProductList(@Query("hsk") String hsk,@Query("page") int page,@Query("size") int size);


    /*
    * 积分商城 积分明细
    * */
    @GET("baidu")
    Observable<Response<ResponseListInfo<IntegralDetailBean>>> getIntegralDetailList(@Query("hsk") String hsk,@Query("page") int page,@Query("size") int size);


    /**
     * 试用
     * */
    ///////////////////////////////////////////////////////////////////////////////////////////////
    /*
     * 关注别人
     * */
    @GET("system/connect/getTestReportPeople")
    Observable<Response<SignBean>> attentionPerson(@Query("hsk") String hsk,
                                                   @Query("userid") String userId,
                                                   @Query("talented") String targetId,
                                                    @Query("type") String type);
    /**
     * 试用页面进行中商品列表获取
     *
     * @param hsk  握手码
     * @param type 试用类别（1：进行中，2：未开始，3：已结束）
     * @param sortType 排序方式（最热：0（默认）；最新：1）
     * @param page
     * @param size
     */
    @GET("system/connect/getALLNewProducts")
    Observable<Response<ResponseListInfo<ThingsInfoEntity>>> getTryUseThingsList(@Query("hsk") String hsk,@Query("basetype")String sortType, @Query("title") String title, @Query("commoditytype") int type, @Query("page") int page, @Query("size") int size);


    /**
     * 试用产品详情数据获取
     *
     * @param id
     */
    @GET("system/connect/getProductsDetails")
    Observable<Response<ThingsInfoEntity>> getProductsDetails(@Query("hsk") String hsk, @Query("commodityid") String id, @Query("userid") String userId);

    /**
     * 收藏某个商品
     */

    @GET("system/connect/getCollectCommodity")
    Observable<Response<SignBean>> getCollectCommodity(@Query("hsk") String hsk, @Query("commodityid") String id, @Query("userid") String userid, @Query("type") int type);

    /**
     * 申请试用某个商品
     */
    @GET("system/connect/getProductApplication")
    Observable<Response<SignBean>> getProductApplication(@Query("hsk") String hsk, @Query("commodityid") String id, @Query("userid") String userid);

    /**
     * 获取某个商品的所有报告
     *
     * @param id 商品的id
     */

    @GET("system/connect/getOneProductsTestReport")
    Observable<Response<ResponseListInfo<ReportInfo>>> getOneProductsTestReport(@Query("hsk") String hsk, @Query("commodityid") String id, @Query("page") int page, @Query("size") int size);


    //============================报告==================================

    /**
     * 获取报告分类类别
     */

    @GET("system/connect/getCommodityType")
    Observable<Response<List<ProductTypeEntity>>> getProductType(@Query("hsk") String hsk);

    /**
     * 获取某个报告的详情
     */
    @GET("system/connect/getTestReportDetail")
    Observable<Response<ReportInfo>> getTestReportDetail(@Query("hsk") String hsk, @Query("yhsybgid") int id, @Query("userid") String userId);


    /**
     * 获取热门评测报告列表
     */

    @GET("system/connect/getHotTestReport")
    Observable<Response<ResponseListInfo<TestReportBean>>> getHotTestReport(@Query("hsk") String hsk, @Query("title") String title, @Query("testreportype") String type, @Query("page") int page, @Query("size") int size);

    /**
     * 获取试用报告详情评论列表
     */
    @GET("system/connect/getTestReportComments")
    Observable<Response<CommentsBean>> getTestReportComments(@Query("hsk") String hsk, @Query("yhsybgid") int reportId, @Query("page") int page, @Query("size") int size, @Query("userid") String userId);

    /**
     * 获取二级评论详情接口
     */

    @GET("system/connect/getTestReportCommentReplys")
    Observable<Response<ResponseListInfo<TestreportreplyListBean>>> getTestReportCommentReplys(@Query("hsk") String hsk, @Query("yhsybgplbid") int firstCommentId, @Query("page") int page, @Query("size") int size);

    /**
     * 收藏试用报告
     */

    @GET("system/connect/getCollectTestReport")
    Observable<Response<SignBean>> getCollectTestReport(@Query("hsk") String hsk, @Query("reportid") int reportId, @Query("userid") String userid, @Query("type") int type);

    /**
     * 点赞试用报告
     */
    @GET("system/connect/getlikeTestReport")
    Observable<Response<SignBean>> getLikeTestReport(@Query("hsk") String hsk, @Query("yhsybgid") int reportId, @Query("userid") String userid);

    /**
     * 点赞评论接口
     */
    @GET("system/connect/addUserLike")
    Observable<Response<SignBean>> addUserLike(@Query("hsk") String hsk, @Query("ywid") int reportId, @Query("userid") String userId, @Query("ywlx") int type);

    /**
     * 评论报告，生成的1级评论
     * */
    @GET("system/connect/saveTestReportComment")
    Observable<Response<SignBean>>saveTestReportComment(@Query("hsk")String hsk,
                                                        @Query("yhsybgid")int reportId,
                                                        @Query("userid")String userId,
                                                        @Query("commentdetail")String commentdetail);

    /**
     * 评论报告，生成的2级评论
     * */
    @GET("system/connect/saveTestReportComment")
    Observable<Response<SignBean>>saveSecondReportComment(@Query("hsk")String hsk,
                                                        @Query("yhsybgid")int reportId,
                                                        @Query("userid")String userId,
                                                        @Query("commentdetail")String commentdetail,
                                                        @Query("yhsybgplbid")int discussId);

    /**
     *
     * 分享小红书成功回调后上传参数到服务器
     * */
    @FormUrlEncoded
    @POST("system/connect/saveProductToShare")
    Observable<Response<SignBean>>submitUrl(@FieldMap Map<String, String> params);
    //-------------------上传---------------------------

    /**
     * 上传图片接口
     * */
    @Multipart
    @POST("system/connect/saveTestReport")
    Observable<Response<SignBean>>submitPics(@PartMap Map<String, RequestBody> map, @Part List<MultipartBody.Part> fileArr);

    /**
     * 评论详情获取一条一级评论
     * */
    @GET("system/connect/getTestReportComment")
    Observable<Response<DiscussDetailFirstEntity>>getFirstDiscuss(@Query("hsk")String hsk,
                                                                  @Query("userid")String usrId,
                                                                  @Query("yhsybgplbid")String discussId);

    /**
     * 分享提交URL接口
     * */
    @FormUrlEncoded
    @POST("system/connect/saveShareLink")
    Observable<Response<SignBean>>submitShareUrl(@FieldMap Map<String, String> params);

}
