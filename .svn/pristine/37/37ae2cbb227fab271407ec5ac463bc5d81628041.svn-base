package com.zfsoft.zfsoft_product.modules.report.submit_report;

import android.content.Intent;
import android.os.Bundle;
import android.support.v7.widget.GridLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.View;
import android.widget.AdapterView;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;

import com.lzy.imagepicker.ImagePicker;
import com.lzy.imagepicker.bean.ImageItem;
import com.lzy.imagepicker.ui.ImageGridActivity;
import com.lzy.imagepicker.ui.ImagePreviewDelActivity;
import com.vondear.rxtool.view.RxToast;
import com.zfsoft.zfsoft_product.R;
import com.zfsoft.zfsoft_product.base.BaseFragment;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

import butterknife.BindView;

import static com.zfsoft.zfsoft_product.modules.report.submit_report.SubmitReportActivity.IMAGE_ITEM_ADD;

/**
 * 创建日期：2019/1/23 on 11:26
 * 描述:
 * 作者:Ls
 */
public class SubmitReportFragment extends BaseFragment implements View.OnClickListener, SubmitReportAdapter.OnRecyclerViewItemClickListener {
    @BindView(R.id.submit_report_back)
    ImageView mSubmitReportBack;
    @BindView(R.id.submit_recycler)
    RecyclerView mSubmitRecycler;
    @BindView(R.id.tv_sum_title)
    TextView mTvSumTitle;
    @BindView(R.id.et_input_title)
    EditText mEtInputTitle;
    @BindView(R.id.et_input_content)
    EditText mEtInputContent;
    @BindView(R.id.tv_submit)
    TextView mTvSubmit;
    private ArrayList<ImageItem> selImageList; //当前选择的所有图片
    private int maxImgCount = 9;               //允许选择图片最大数
    public static final int REQUEST_CODE_SELECT = 100;
    public static final int REQUEST_CODE_PREVIEW = 101;
    private SubmitReportAdapter mAdapter;

    @Inject
    public SubmitReportFragment() {

    }


    @Override
    protected int getLayoutResID() {
        return R.layout.fragment_submit_report;
    }

    @Override
    protected void initVariables() {
        selImageList = new ArrayList<>();
    }

    @Override
    protected void handleBundle(Bundle bundle) {
       // selImageList = (ArrayList<ImageItem>) bundle.getSerializable(ImagePicker.EXTRA_RESULT_ITEMS);
    }

    @Override
    protected void operateViews(View view) {
        mAdapter = new SubmitReportAdapter(maxImgCount, mContext, selImageList);
        GridLayoutManager manager = new GridLayoutManager(mContext, 4);
        mSubmitRecycler.setLayoutManager(manager);
        mSubmitRecycler.setAdapter(mAdapter);
        mSubmitRecycler.setHasFixedSize(true);
        mAdapter.setOnItemClickListener(this);

    }

    @Override
    protected void initListener() {
        mSubmitReportBack.setOnClickListener(this);
        mTvSumTitle.setOnClickListener(this);
        mTvSubmit.setOnClickListener(this);
        mEtInputTitle.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                mTvSumTitle.setText(String.valueOf(30 - count));
            }

            @Override
            public void afterTextChanged(Editable s) {

            }
        });
    }

    @Override
    public void initPresenter() {

    }

    @Override
    public void onClick(View v) {
        int key = v.getId();
        if (key == R.id.submit_report_back) {
            getActivity().finish();
        } else if (key == R.id.tv_submit) {
            RxToast.showToast("发布");
        }
    }

    @Override
    public void onItemClick(View view, int position) {
        switch (position) {
            case IMAGE_ITEM_ADD:
                List<String> names = new ArrayList<>();
                names.add("相册");
                names.add("小视频");


                showDialog(new SelectDialog.SelectDialogListener() {
                    @Override
                    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                        switch (position) {
                            case 0:
                                //相册
                                //打开选择,本次允许选择的数量
                                ImagePicker.getInstance().setSelectLimit(maxImgCount - selImageList.size());
                                Intent intent1 = new Intent(getActivity(), ImageGridActivity.class);
                                /* 如果需要进入选择的时候显示已经选中的图片，
                                 * 详情请查看ImagePickerActivity
                                 * */
                                //intent1.putExtra(ImageGridActivity.EXTRAS_IMAGES,images);
                                startActivityForResult(intent1, REQUEST_CODE_SELECT);
                                break;

                            case 1:
                                //小视频
                                RxToast.showToast("小视频");
                                break;

                            default:
                                break;
                        }
                    }
                }, names);
                     break;

                default:
                    //打开预览
                    Intent intentPreview = new Intent(getActivity(), ImagePreviewDelActivity.class);
                    intentPreview.putExtra(ImagePicker.EXTRA_IMAGE_ITEMS, (ArrayList<ImageItem>) mAdapter.getImages());
                    intentPreview.putExtra(ImagePicker.EXTRA_SELECTED_IMAGE_POSITION, position);
                    intentPreview.putExtra(ImagePicker.EXTRA_FROM_ITEMS, true);
                    startActivityForResult(intentPreview, REQUEST_CODE_PREVIEW);
                    break;
        }
    }

    private SelectDialog showDialog(SelectDialog.SelectDialogListener listener, List<String> names) {
        SelectDialog dialog = new SelectDialog(getActivity(), R.style
                .transparentFrameWindowStyle,
                listener, names);
        if (!getActivity().isFinishing()) {
            dialog.show();
        }
        return dialog;
    }

    ArrayList<ImageItem> images = null;

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (resultCode == ImagePicker.RESULT_CODE_ITEMS) {
            //添加图片返回
            if (data != null && requestCode == REQUEST_CODE_SELECT) {
                images = (ArrayList<ImageItem>) data.getSerializableExtra(ImagePicker.EXTRA_RESULT_ITEMS);
                if (images != null) {
                    selImageList.addAll(images);
                    mAdapter.setImages(selImageList);
                }
            }
        } else if (resultCode == ImagePicker.RESULT_CODE_BACK) {
            //预览图片返回
            if (data != null && requestCode == REQUEST_CODE_PREVIEW) {
                images = (ArrayList<ImageItem>) data.getSerializableExtra(ImagePicker.EXTRA_IMAGE_ITEMS);
                if (images != null) {
                    selImageList.clear();
                    selImageList.addAll(images);
                    mAdapter.setImages(selImageList);
                }
            }
        }
    }

    @Override
    protected boolean immersionEnabled() {
        return true;
    }

    @Override
    protected void immersionInit() {
        super.immersionInit();
        if (immersionBar == null) {
            return;
        }
        immersionBar.statusBarDarkFont(true);
        immersionBar.statusBarColor(R.color.colorWhite)
                .init();
    }
}
